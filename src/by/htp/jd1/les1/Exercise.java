package by.htp.jd1.les1;
import java.math.BigInteger;
import java.util.Random;

public class Exercise {
	public static void exercise1(){
		// 1. –î–∞–Ω—ã –¥–≤–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–ª–∞ —Ö –∏  —É. 
		//–í—ã—á–∏—Å–ª–∏—Ç—å –∏—Ö —Å—É–º–º—É, —Ä–∞–∑–Ω–æ—Å—Ç—å, –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏ —á–∞—Å—Ç–Ω–æ–µ. 
		double x;
		x = Math.random() * 100;
		double y;
		y = Math.random() * 100 - 10;
		double addition = x + y;
		double substraction = x - y;
		double multiplication = x * y;
		double division = x / y;
		
		System.out.println("x = " + x);
		System.out.println("y = " + y);
		System.out.println("—Å—É–º–º–∞: " + addition );
		System.out.println("—Ä–∞–∑–Ω–æ—Å—Ç—å: " + substraction );
		System.out.println("–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ: " + multiplication );
		System.out.println("—á–∞—Å—Ç–Ω–æ–µ: " + division );
	}
	
	public static void exercise2(){
		//2. –ù–∞–π–¥–∏—Ç–µ  –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏: —Å = 3 + –∞. 
		double a = Math.random() * 100;
		double c = 3 + a;
		System.out.println(c + "= 3 + " + a );
	}
	
	public static void exercise3(){
		//3. –ù–∞–π–¥–∏—Ç–µ  –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏: z = 2 * x + ( y ‚Äì 2 ) * 5.
		double x3 = Math.random() * 100;
		double y3 = Math.random() * 100;
		double z = 2 * x3 + ( y3 - 2 ) * 5;
		System.out.println("–ù–∞–π–¥–∏—Ç–µ  –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:  z = 2 * x + ( y ‚Äì 2 ) * 5");
		System.out.println("x = " + x3);
		System.out.println("y = " + y3);
		System.out.println("z = " + z);
	}
	public static void exercise4(){
		//4. –ù–∞–π–¥–∏—Ç–µ  –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏: z = ( (a ‚Äì 3 ) * b / 2) + c.
		double a = Math.random() * 100;
		double b = Math.random() * 100;
		double c = Math.random() * 100;
		double z = ( (a - 3 ) * b / 2) + c;
		System.out.println("–ù–∞–π–¥–∏—Ç–µ  –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏:  z = ( (a ‚Äì 3 ) * b / 2) + c)");
		System.out.println("a = " + a);
		System.out.println("b = " + b);
		System.out.println("c = " + c);
		System.out.println("z = " + z);
	}
	
	public static void exercise5(){
		//5. –°–æ—Å—Ç–∞–≤–∏—Ç—å –∞–ª–≥–æ—Ä–∏—Ç–º –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è —Å—Ä–µ–¥–Ω–µ–≥–æ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–≤—É—Ö —á–∏—Å–µ–ª 
		Random rand = new Random();
		double x5 = rand.nextDouble();
		double y5 = rand.nextDouble();
		double averageXY = (x5 + y5) / 2;
		System.out.println("C—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ —Ö = " + x5 + " –∏ y = " + y5 + " —ç—Ç–æ " + averageXY);
	}
	public static void exercise6(){
		//6. –ù–∞–ø–∏—Å–∞—Ç—å –∫–æ–¥ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏. 
		// –í n –º–∞–ª—ã—Ö –±–∏–¥–æ–Ω–∞—Ö 80 –ª –º–æ–ª–æ–∫–∞. –°–∫–æ–ª—å–∫–æ –ª–∏—Ç—Ä–æ–≤ –º–æ–ª–æ–∫–∞ –≤ m –±–æ–ª—å—à–∏—Ö –±–∏–¥–æ–Ω–∞—Ö,
		//–µ—Å–ª–∏ –≤ –∫–∞–∂–¥–æ–º –±–æ–ª—å—à–æ–º –±–∏–¥–æ–Ω–µ –Ω–∞ 12 –ª. –±–æ–ª—å—à–µ, —á–µ–º –≤ –º–∞–ª–æ–º? 
		String message = "–í–≤–µ–¥–∏—Ç–µ n (–º–∞–ª—ã–µ –±–∏–¥–æ–Ω—ã –º–æ–ª–æ–∫–∞) ";
		int n = EnterValue.readIntFromConsole(message);
		String message2 = "–í–≤–µ–¥–∏—Ç–µ m (–±–æ–ª—å—à–∏–µ –±–∏–¥–æ–Ω—ã –º–æ–ª–æ–∫–∞) ";
		int m = EnterValue.readIntFromConsole(message2);
		int milk = (80/n + 12) * m;
		System.out.println("–í –±–æ–ª—å—à–∏—Ö –±–∏–¥–æ–Ω–∞—Ö " + milk + " –ª–∏—Ç—Ä–æ–≤ –º–æ–ª–æ–∫–∞");
	}
	public static void exercise7(){
		//7. –î–∞–Ω –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫, —à–∏—Ä–∏–Ω–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ –≤ –¥–≤–∞ —Ä–∞–∑–∞ –º–µ–Ω—å—à–µ –¥–ª–∏–Ω—ã. –ù–∞–π—Ç–∏ –ø–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞
		Random rand = new Random();
		double width = rand.nextDouble();
		double length = width * 2;
		double square = width * length;
		System.out.print("–ü–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å —à–∏—Ä–∏–Ω–æ–π " + width + " –∏ –¥–ª–∏–Ω–æ–π " + length + " —Ä–∞–≤–Ω–∞ ");
		System.out.println(square);
	}
	public static void exercise8(){
		//8. –í—ã—á–∏—Å–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ (–≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è): ùëè + ‚àöùëè2 + 4ùëéùëê 2ùëé ‚àí ùëé3ùëê + ùëè‚àí2 
		Random rand = new Random();
		double a8 = rand.nextDouble();
		double b8 = rand.nextDouble();
		double c8 = rand.nextDouble();
		double value8 = (b8 + Math.sqrt(b8 * b8 + 4 * a8 * c8))/2 *a8 - Math.pow(a8, 3) * c8 + Math.pow(b8, -2);
		System.out.println("–ó–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è " + value8);
	}
	
	public static void exercise9(){
		//9. –í—ã—á–∏—Å–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ (–≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è): ùëé /ùëê ‚àó ùëè/ùëë ‚àí (ùëéùëè ‚àí ùëê)/ùëêùëë
		Random rand = new Random();
		double a9 = rand.nextDouble();
		double b9 = rand.nextDouble();
		double c9 = rand.nextDouble();
		double d9 = rand.nextDouble();
		double value9 = (a9 / c9) * (b9 / d9) - (a9 * b9 - c9) / c9 * d9;
		System.out.println("–ó–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è " + value9);
	}
	
	public static void exercise10() {
		//10. –í—ã—á–∏—Å–ª–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ (–≤—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è): (ùë†ùëñùëõùë• + ùëêùëúùë†ùë¶)/(ùëêùëúùë†ùë• ‚àí ùë†ùëñùëõùë¶) ‚àó ùë°ùëî ùë•ùë¶ 
		Random rand = new Random();
		double x10 = rand.nextDouble();
		double y10 = rand.nextDouble();
		double value10 = ((Math.sin(x10) + Math.cos(y10)) / (Math.cos(x10) - Math.sin(y10))) * Math.tan(x10 * y10);
		System.out.println("–ó–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è " + value10);
	}
	
	public static void exercise11() {
		//11. –í—ã—á–∏—Å–ª–∏—Ç—å –ø–µ—Ä–∏–º–µ—Ç—Ä –∏ –ø–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–≥–æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ –ø–æ –¥–ª–∏–Ω–∞–º –∞ –∏ b  –¥–≤—É—Ö –∫–∞—Ç–µ—Ç–æ–≤. 
		Random rand = new Random();
		double side1 = rand.nextDouble();
		double side2 = rand.nextDouble();
		double side3 = Math.sqrt( side1 * side1 + side2 * side2); 
		double perimeter = side1 + side2 + side3;
		double squareOfTriangle = side1 * side2 / 2;
		System.out.println("–ü–µ—Ä–∏–º–µ—Ç—Ä " + perimeter + ", –ø–ª–æ—â–∞–¥—å " + squareOfTriangle);
	}
	
	public static void exercise12() {
		//12. –í—ã—á–∏—Å–ª–∏—Ç—å —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É –¥–≤—É–º—è —Ç–æ—á–∫–∞–º–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ (—Ö1, —É1)–∏ (x2, —É2).
		Random rand = new Random();
		double x1 = rand.nextDouble();
		double x2 = rand.nextDouble();
		double y1 = rand.nextDouble();
		double y2 = rand.nextDouble();
		double distance = Math.sqrt(Math.sqrt(x2 - x1) + Math.sqrt(y2 - y1)); 
		System.out.println("–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –º–µ–∂–¥—É —Ç–æ—á–∫–∞–º–∏ (" + x1 + "," + y1 + ")" + "," + "(" + x2 + "," + y2 + ") —Ä–∞–≤–Ω–æ " + distance);
	}
	
	public static void exercise13() {
		//13. –ó–∞–¥–∞–Ω—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ç—Ä–µ—Ö –≤–µ—Ä—à–∏–Ω —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞  (—Ö1 —É2),(—Ö2, —É2),(—Ö3, —É3). –ù–∞–π—Ç–∏ –µ–≥–æ –ø–µ—Ä–∏–º–µ—Ç—Ä –∏ –ø–ª–æ—â–∞–¥—å.
		String messageX = "Enter x";
		int x1 = EnterValue.readIntFromConsole(messageX);
		String messageY = "Enter y";
		int y1 = EnterValue.readIntFromConsole(messageY);
		int x2 = EnterValue.readIntFromConsole(messageX);
		int y2 = EnterValue.readIntFromConsole(messageY);
		int x3 = EnterValue.readIntFromConsole(messageX);
		int y3 = EnterValue.readIntFromConsole(messageY);
		double sideA = Mathematics.findDistance(x1, y1, x2, y2);
		double sideB = Mathematics.findDistance(x2, y2, x3, y3);
		double sideC = Mathematics.findDistance(x1, y1, x3, y3);
		double trianglePerimeter = sideA + sideB + sideC;
		double p = trianglePerimeter / 2;
		double triangleSquare = Math.sqrt(p * (p - sideA) * (p - sideB) * (p - sideC)); 
		System.out.println("–ü–µ—Ä–∏–º–µ—Ç—Ä —Ä–∞–≤–µ–Ω " + trianglePerimeter + " –∏ –ø–ª–æ—â–∞–¥—å —Ä–∞–≤–Ω–∞ " + triangleSquare);
	}
	
	public static void exercise14() {
		//14. –í—ã—á–∏—Å–ª–∏—Ç—å –¥–ª–∏–Ω—É –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ –∏ –ø–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞ –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Ä–∞–¥–∏—É—Å–∞ R.
		String message = "Enter radius";
		int r = EnterValue.readIntFromConsole(message);
		double l = 2 * Math.PI * r;
		double area = 2 * Math.PI * r * r;
		System.out.println("–î–ª–∏–Ω–∞ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ = " + l + " –∏ –ø–ª–æ—â–∞–¥—å —Ä–∞–≤–Ω–∞ " + area);
	}
	
	public static void exercise15() {
		//15. –ù–∞–ø–∏—Å–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –Ω–∞ —ç–∫—Ä–∞–Ω –ø–µ—Ä–≤—ã–µ —á–µ—Ç—ã—Ä–µ —Å—Ç–µ–ø–µ–Ω–∏ —á–∏—Å–ª–∞ œÄ. 
		System.out.println("–ß–µ—Ç—ã—Ä–µ –ø–µ—Ä–≤—ã–µ —Å—Ç–µ–ø–µ–Ω–∏ —á–∏—Å–ª–∞ PI");
		System.out.println(Math.pow(Math.PI,1));
		System.out.println(Math.pow(Math.PI,2));
		System.out.println(Math.pow(Math.PI,3));
		System.out.println(Math.pow(Math.PI,4));
	}
	
	public static void exercise16() {
		//16. –ù–∞–π—Ç–∏ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ü–∏—Ñ—Ä –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —á–µ—Ç—ã—Ä–µ—Ö–∑–Ω–∞—á–Ω–æ–≥–æ —á–∏—Å–ª–∞.
		String str = ("–í–≤–µ–¥–∏—Ç–µ —á–µ—Ç—ã—Ä–µ—Ö–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ");
		int i = EnterValue.readIntFromConsole(str);
		int first = i % 10;
		i = (i - first) / 10;
		int second = i % 10;
		i = (i - second )/ 10;
		int third = i % 10;
		i = (i - third) / 10;
		int fourth = i;
		
		int multiple = first * second * third * fourth;
		System.out.println("–ü—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ü–∏—Ñ—Ä –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —á–µ—Ç—ã—Ä–µ—Ö–∑–Ω–∞—á–Ω–æ–≥–æ —á–∏—Å–ª–∞ " + multiple);
	}
	
	public static void exercise17() {
		//17. –î–∞–Ω—ã –¥–≤–∞ —á–∏—Å–ª–∞.
		//–ù–∞–π—Ç–∏ —Å—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ –∫—É–±–æ–≤ —ç—Ç–∏—Ö —á–∏—Å–µ–ª –∏ —Å—Ä–µ–¥–Ω–µ–µ –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–µ –º–æ–¥—É–ª–µ–π —ç—Ç–∏—Ö —á–∏—Å–µ–ª. 
		String str = ("–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ");
		int x = EnterValue.readIntFromConsole(str);
		String str2 = ("–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ");
		int y = EnterValue.readIntFromConsole(str2);
		BigInteger average = BigInteger.valueOf((x * x * x + y * y * y) / 2);
		BigInteger geometricMean = BigInteger.valueOf((long) Math.sqrt( Math.abs(x) * Math.abs(y)));
		System.out.println("—Å—Ä–µ–¥–Ω–µ–µ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–µ—Å–∫–æ–µ –∫—É–±–æ–≤ = " + average);
		System.out.println("—Å—Ä–µ–¥–Ω–µ–µ –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–µ –º–æ–¥—É–ª–µ–π = " + geometricMean);
		
	}
	
	public static void exercise18() {
		//18.  –î–∞–Ω–∞ –¥–ª–∏–Ω–∞ —Ä–µ–±—Ä–∞ –∫—É–±–∞. –ù–∞–π—Ç–∏ –ø–ª–æ—â–∞–¥—å –≥—Ä–∞–Ω–∏, –ø–ª–æ—â–∞–¥—å –ø–æ–ª–Ω–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –∏ –æ–±—ä–µ–º —ç—Ç–æ–≥–æ –∫—É–±–∞. 
		String str = "–î–ª–∏–Ω–∞ —Ä–µ–±—Ä–∞ –∫—É–±–∞ ";
		int a = EnterValue.randomInt2(30);
		System.out.println(str + a);
		int area1 = a * a;
		int area2 = 6 * area1;
		int cubeVolume = (int) Math.pow(a, 3);
		System.out.print("–ø–ª–æ—â–∞–¥—å –≥—Ä–∞–Ω–∏ = " + area1);
		System.out.println(" , –ø–ª–æ—â–∞–¥—å –ø–æ–ª–Ω–æ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ = " + area2 + " , –æ–±—ä–µ–º –∫—É–±–∞ = " + cubeVolume);
	}
	
	public static void exercise19() {
		//19. –î–∞–Ω–∞ —Å—Ç–æ—Ä–æ–Ω–∞ —Ä–∞–≤–Ω–æ—Å—Ç–æ—Ä–æ–Ω–Ω–µ–≥–æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞.
		//–ù–∞–π—Ç–∏ –ø–ª–æ—â–∞–¥—å —ç—Ç–æ–≥–æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞, –µ–≥–æ –≤—ã—Å–æ—Ç—É, —Ä–∞–¥–∏—É—Å—ã –≤–ø–∏—Å–∞–Ω–Ω–æ–π –∏ –æ–ø–∏—Å–∞–Ω–Ω–æ–π –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–µ–π.
		String str = "C—Ç–æ—Ä–æ–Ω–∞ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ ";
		int side = EnterValue.randomInt2(30);
		System.out.println(str + side);
		double area = side * side * Math.sqrt(3)/4;
		double h = Math.sqrt(3)/2 *side;
		double radius1 = area/(side * 3 / 2);
		double radius2 = (side * side * side) / 4 * area;
		System.out.print("–ø–ª–æ—â–∞–¥—å —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ = " + area);
		System.out.print(", –≤—ã—Å–æ—Ç–∞ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ = " + h);
		System.out.print(", —Ä–∞–¥–∏—É—Å—ã –≤–ø–∏—Å–∞–Ω–Ω–æ–π –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ = " + radius1);
		System.out.println(", —Ä–∞–¥–∏—É—Å –æ–ø–∏—Å–∞–Ω–Ω–æ–π –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ = " + radius2);

	}
	
	public static void exercise20() {
		//20.–ò–∑–≤–µ—Å—Ç–Ω–∞ –¥–ª–∏–Ω–∞ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏. –ù–∞–π—Ç–∏ –ø–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–≥–æ —ç—Ç–æ–π –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å—é.
		String str = "–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏–Ω—É –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏ ";
		double l = EnterValue.readDoubleFromConsole(str);
		double radius = l/2 * Math.PI;
		double area = Math.PI * radius * radius;
		System.out.println("–ü–ª–æ—â–∞–¥—å –∫—Ä—É–≥–∞ = " + area);
	}
	
	public static void exercise21() {
		//21. –î–∞–Ω–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ R –≤–∏–¥–∞ nnn.ddd
		//(—Ç—Ä–∏ —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Ä–∞–∑—Ä—è–¥–∞ –≤ –¥—Ä–æ–±–Ω–æ–π –∏ —Ü–µ–ª–æ–π —á–∞—Å—Ç—è—Ö).
		//–ü–æ–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏ –¥—Ä–æ–±–Ω—É—é –∏ —Ü–µ–ª—É—é —á–∞—Å—Ç–∏ —á–∏—Å–ª–∞ –∏ –≤—ã–≤–µ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —á–∏—Å–ª–∞.
		String str = "–í–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–µ —á–∏—Å–ª–æ R –≤–∏–¥–∞ nnn.ddd";
		double r = EnterValue.readDoubleFromConsole(str);
		double x = r * 1000 % 1000;
		System.out.println("ddd = " + x);
		double y = r - x/1000;
		System.out.println("nnn = " + y);
		r = x + y/1000;
		System.out.println("r = " + r);
	}

	public static void exercise22() {
			//22. –î–∞–Ω–æ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –¢, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ—à–µ–¥—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤
			//—Å–µ–∫—É–Ω–¥–∞—Ö. –í—ã–≤–µ—Å—Ç–∏ –¥–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ —á–∞—Å–∞—Ö, –º–∏–Ω—É—Ç–∞—Ö –∏ —Å–µ–∫—É–Ω–¥–∞—Ö –≤ —Å–ª–µ–¥—É—é—â–µ–π
			//—Ñ–æ—Ä–º–µ: –ù—á –ú–ú–º–∏–Ω SSc.
			String str = "–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ—à–µ–¥—à–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ c–µ–∫—É–Ω–¥–∞—Ö";
			int t = EnterValue.readIntFromConsole(str);
			int hour = t /3600;
			int min = (t - hour * 3600) / 60;
			int sec = t - hour * 3600 - min * 60;
			System.out.println(hour + " —á " + min + " –º–∏–Ω " + sec + "—Å–µ–∫");

	}
	
	
	
}

